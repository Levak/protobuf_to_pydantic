"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.empty_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _State:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INACTIVE: _State.ValueType  # 0
    PENDING: _State.ValueType  # 1
    ACTIVE: _State.ValueType  # 2
class State(_State, metaclass=_StateEnumTypeWrapper):
    pass

INACTIVE: State.ValueType  # 0
PENDING: State.ValueType  # 1
ACTIVE: State.ValueType  # 2
global___State = State


class FloatTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.float
    range_e_test: builtins.float
    range_test: builtins.float
    in_test: builtins.float
    not_in_test: builtins.float
    default_test: builtins.float
    default_template_test: builtins.float
    not_enable_test: builtins.float
    default_factory_test: builtins.float
    miss_default_test: builtins.float
    required_test: builtins.float
    alias_test: builtins.float
    desc_test: builtins.float
    multiple_of_test: builtins.float
    example_test: builtins.float
    example_factory: builtins.float
    field_test: builtins.float
    type_test: builtins.float
    title_test: builtins.float
    extra_test: builtins.float
    def __init__(self,
        *,
        const_test: builtins.float = ...,
        range_e_test: builtins.float = ...,
        range_test: builtins.float = ...,
        in_test: builtins.float = ...,
        not_in_test: builtins.float = ...,
        default_test: builtins.float = ...,
        default_template_test: builtins.float = ...,
        not_enable_test: builtins.float = ...,
        default_factory_test: builtins.float = ...,
        miss_default_test: builtins.float = ...,
        required_test: builtins.float = ...,
        alias_test: builtins.float = ...,
        desc_test: builtins.float = ...,
        multiple_of_test: builtins.float = ...,
        example_test: builtins.float = ...,
        example_factory: builtins.float = ...,
        field_test: builtins.float = ...,
        type_test: builtins.float = ...,
        title_test: builtins.float = ...,
        extra_test: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___FloatTest = FloatTest

class DoubleTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.float
    range_e_test: builtins.float
    range_test: builtins.float
    in_test: builtins.float
    not_in_test: builtins.float
    default_test: builtins.float
    default_template_test: builtins.float
    not_enable_test: builtins.float
    default_factory_test: builtins.float
    miss_default_test: builtins.float
    required_test: builtins.float
    alias_test: builtins.float
    desc_test: builtins.float
    multiple_of_test: builtins.float
    example_test: builtins.float
    example_factory: builtins.float
    field_test: builtins.float
    type_test: builtins.float
    title_test: builtins.float
    extra_test: builtins.float
    def __init__(self,
        *,
        const_test: builtins.float = ...,
        range_e_test: builtins.float = ...,
        range_test: builtins.float = ...,
        in_test: builtins.float = ...,
        not_in_test: builtins.float = ...,
        default_test: builtins.float = ...,
        default_template_test: builtins.float = ...,
        not_enable_test: builtins.float = ...,
        default_factory_test: builtins.float = ...,
        miss_default_test: builtins.float = ...,
        required_test: builtins.float = ...,
        alias_test: builtins.float = ...,
        desc_test: builtins.float = ...,
        multiple_of_test: builtins.float = ...,
        example_test: builtins.float = ...,
        example_factory: builtins.float = ...,
        field_test: builtins.float = ...,
        type_test: builtins.float = ...,
        title_test: builtins.float = ...,
        extra_test: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___DoubleTest = DoubleTest

class Int32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    default_template_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    required_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    title_test: builtins.int
    extra_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        default_template_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        required_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        title_test: builtins.int = ...,
        extra_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___Int32Test = Int32Test

class Int64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    default_template_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    required_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    title_test: builtins.int
    extra_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        default_template_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        required_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        title_test: builtins.int = ...,
        extra_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___Int64Test = Int64Test

class Uint32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    default_template_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    required_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    title_test: builtins.int
    extra_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        default_template_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        required_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        title_test: builtins.int = ...,
        extra_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___Uint32Test = Uint32Test

class Sint32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    default_template_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    required_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    title_test: builtins.int
    extra_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        default_template_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        required_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        title_test: builtins.int = ...,
        extra_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___Sint32Test = Sint32Test

class Uint64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    default_template_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    required_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    title_test: builtins.int
    extra_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        default_template_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        required_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        title_test: builtins.int = ...,
        extra_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___Uint64Test = Uint64Test

class Sint64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    default_template_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    required_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    title_test: builtins.int
    extra_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        default_template_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        required_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        title_test: builtins.int = ...,
        extra_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___Sint64Test = Sint64Test

class Fixed32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    default_template_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    required_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    title_test: builtins.int
    extra_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        default_template_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        required_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        title_test: builtins.int = ...,
        extra_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___Fixed32Test = Fixed32Test

class Fixed64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    default_template_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    required_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    title_test: builtins.int
    extra_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        default_template_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        required_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        title_test: builtins.int = ...,
        extra_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___Fixed64Test = Fixed64Test

class Sfixed32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    default_template_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    required_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    title_test: builtins.int
    extra_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        default_template_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        required_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        title_test: builtins.int = ...,
        extra_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___Sfixed32Test = Sfixed32Test

class Sfixed64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    default_template_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    required_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    title_test: builtins.int
    extra_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        default_template_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        required_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        title_test: builtins.int = ...,
        extra_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_template_test",b"default_template_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___Sfixed64Test = Sfixed64Test

class BoolTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BOOL_1_TEST_FIELD_NUMBER: builtins.int
    BOOL_2_TEST_FIELD_NUMBER: builtins.int
    ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    bool_1_test: builtins.bool
    bool_2_test: builtins.bool
    enable_test: builtins.bool
    default_test: builtins.bool
    miss_default_test: builtins.bool
    required_test: builtins.bool
    alias_test: builtins.bool
    desc_test: builtins.bool
    example_test: builtins.bool
    field_test: builtins.bool
    title_test: builtins.bool
    extra_test: builtins.bool
    def __init__(self,
        *,
        bool_1_test: builtins.bool = ...,
        bool_2_test: builtins.bool = ...,
        enable_test: builtins.bool = ...,
        default_test: builtins.bool = ...,
        miss_default_test: builtins.bool = ...,
        required_test: builtins.bool = ...,
        alias_test: builtins.bool = ...,
        desc_test: builtins.bool = ...,
        example_test: builtins.bool = ...,
        field_test: builtins.bool = ...,
        title_test: builtins.bool = ...,
        extra_test: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","bool_1_test",b"bool_1_test","bool_2_test",b"bool_2_test","default_test",b"default_test","desc_test",b"desc_test","enable_test",b"enable_test","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","miss_default_test",b"miss_default_test","required_test",b"required_test","title_test",b"title_test"]) -> None: ...
global___BoolTest = BoolTest

class StringTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    LEN_TEST_FIELD_NUMBER: builtins.int
    S_RANGE_LEN_TEST_FIELD_NUMBER: builtins.int
    PATTERN_TEST_FIELD_NUMBER: builtins.int
    PREFIX_TEST_FIELD_NUMBER: builtins.int
    SUFFIX_TEST_FIELD_NUMBER: builtins.int
    CONTAINS_TEST_FIELD_NUMBER: builtins.int
    NOT_CONTAINS_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    EMAIL_TEST_FIELD_NUMBER: builtins.int
    HOSTNAME_TEST_FIELD_NUMBER: builtins.int
    IP_TEST_FIELD_NUMBER: builtins.int
    IPV4_TEST_FIELD_NUMBER: builtins.int
    IPV6_TEST_FIELD_NUMBER: builtins.int
    URI_TEST_FIELD_NUMBER: builtins.int
    URI_REF_TEST_FIELD_NUMBER: builtins.int
    ADDRESS_TEST_FIELD_NUMBER: builtins.int
    UUID_TEST_FIELD_NUMBER: builtins.int
    PYDANTIC_TYPE_TEST_FIELD_NUMBER: builtins.int
    ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_TEST_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: typing.Text
    len_test: typing.Text
    s_range_len_test: typing.Text
    pattern_test: typing.Text
    prefix_test: typing.Text
    suffix_test: typing.Text
    contains_test: typing.Text
    not_contains_test: typing.Text
    in_test: typing.Text
    not_in_test: typing.Text
    email_test: typing.Text
    hostname_test: typing.Text
    ip_test: typing.Text
    ipv4_test: typing.Text
    ipv6_test: typing.Text
    uri_test: typing.Text
    uri_ref_test: typing.Text
    address_test: typing.Text
    uuid_test: typing.Text
    pydantic_type_test: typing.Text
    enable_test: typing.Text
    default_test: typing.Text
    default_factory_test: typing.Text
    miss_default_test: typing.Text
    required_test: typing.Text
    alias_test: typing.Text
    desc_test: typing.Text
    example_test: typing.Text
    example_factory_test: typing.Text
    field_test: typing.Text
    title_test: typing.Text
    type_test: typing.Text
    extra_test: typing.Text
    def __init__(self,
        *,
        const_test: typing.Text = ...,
        len_test: typing.Text = ...,
        s_range_len_test: typing.Text = ...,
        pattern_test: typing.Text = ...,
        prefix_test: typing.Text = ...,
        suffix_test: typing.Text = ...,
        contains_test: typing.Text = ...,
        not_contains_test: typing.Text = ...,
        in_test: typing.Text = ...,
        not_in_test: typing.Text = ...,
        email_test: typing.Text = ...,
        hostname_test: typing.Text = ...,
        ip_test: typing.Text = ...,
        ipv4_test: typing.Text = ...,
        ipv6_test: typing.Text = ...,
        uri_test: typing.Text = ...,
        uri_ref_test: typing.Text = ...,
        address_test: typing.Text = ...,
        uuid_test: typing.Text = ...,
        pydantic_type_test: typing.Text = ...,
        enable_test: typing.Text = ...,
        default_test: typing.Text = ...,
        default_factory_test: typing.Text = ...,
        miss_default_test: typing.Text = ...,
        required_test: typing.Text = ...,
        alias_test: typing.Text = ...,
        desc_test: typing.Text = ...,
        example_test: typing.Text = ...,
        example_factory_test: typing.Text = ...,
        field_test: typing.Text = ...,
        title_test: typing.Text = ...,
        type_test: typing.Text = ...,
        extra_test: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["address_test",b"address_test","alias_test",b"alias_test","const_test",b"const_test","contains_test",b"contains_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","email_test",b"email_test","enable_test",b"enable_test","example_factory_test",b"example_factory_test","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","hostname_test",b"hostname_test","in_test",b"in_test","ip_test",b"ip_test","ipv4_test",b"ipv4_test","ipv6_test",b"ipv6_test","len_test",b"len_test","miss_default_test",b"miss_default_test","not_contains_test",b"not_contains_test","not_in_test",b"not_in_test","pattern_test",b"pattern_test","prefix_test",b"prefix_test","pydantic_type_test",b"pydantic_type_test","required_test",b"required_test","s_range_len_test",b"s_range_len_test","suffix_test",b"suffix_test","title_test",b"title_test","type_test",b"type_test","uri_ref_test",b"uri_ref_test","uri_test",b"uri_test","uuid_test",b"uuid_test"]) -> None: ...
global___StringTest = StringTest

class BytesTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_LEN_TEST_FIELD_NUMBER: builtins.int
    PREFIX_TEST_FIELD_NUMBER: builtins.int
    SUFFIX_TEST_FIELD_NUMBER: builtins.int
    CONTAINS_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_TEST_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.bytes
    range_len_test: builtins.bytes
    prefix_test: builtins.bytes
    suffix_test: builtins.bytes
    contains_test: builtins.bytes
    in_test: builtins.bytes
    not_in_test: builtins.bytes
    enable_test: builtins.bytes
    default_test: builtins.bytes
    default_factory_test: builtins.bytes
    miss_default_test: builtins.bytes
    required_test: builtins.bytes
    alias_test: builtins.bytes
    desc_test: builtins.bytes
    example_test: builtins.bytes
    example_factory_test: builtins.bytes
    field_test: builtins.bytes
    title_test: builtins.bytes
    type_test: builtins.bytes
    extra_test: builtins.bytes
    def __init__(self,
        *,
        const_test: builtins.bytes = ...,
        range_len_test: builtins.bytes = ...,
        prefix_test: builtins.bytes = ...,
        suffix_test: builtins.bytes = ...,
        contains_test: builtins.bytes = ...,
        in_test: builtins.bytes = ...,
        not_in_test: builtins.bytes = ...,
        enable_test: builtins.bytes = ...,
        default_test: builtins.bytes = ...,
        default_factory_test: builtins.bytes = ...,
        miss_default_test: builtins.bytes = ...,
        required_test: builtins.bytes = ...,
        alias_test: builtins.bytes = ...,
        desc_test: builtins.bytes = ...,
        example_test: builtins.bytes = ...,
        example_factory_test: builtins.bytes = ...,
        field_test: builtins.bytes = ...,
        title_test: builtins.bytes = ...,
        type_test: builtins.bytes = ...,
        extra_test: builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","contains_test",b"contains_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","enable_test",b"enable_test","example_factory_test",b"example_factory_test","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","not_in_test",b"not_in_test","prefix_test",b"prefix_test","range_len_test",b"range_len_test","required_test",b"required_test","suffix_test",b"suffix_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___BytesTest = BytesTest

class EnumTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    const_test: global___State.ValueType
    in_test: global___State.ValueType
    not_in_test: global___State.ValueType
    enable_test: global___State.ValueType
    default_test: global___State.ValueType
    miss_default_test: global___State.ValueType
    required_test: global___State.ValueType
    alias_test: global___State.ValueType
    desc_test: global___State.ValueType
    example_test: global___State.ValueType
    field_test: global___State.ValueType
    title_test: global___State.ValueType
    extra_test: global___State.ValueType
    def __init__(self,
        *,
        const_test: global___State.ValueType = ...,
        in_test: global___State.ValueType = ...,
        not_in_test: global___State.ValueType = ...,
        enable_test: global___State.ValueType = ...,
        default_test: global___State.ValueType = ...,
        miss_default_test: global___State.ValueType = ...,
        required_test: global___State.ValueType = ...,
        alias_test: global___State.ValueType = ...,
        desc_test: global___State.ValueType = ...,
        example_test: global___State.ValueType = ...,
        field_test: global___State.ValueType = ...,
        title_test: global___State.ValueType = ...,
        extra_test: global___State.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_test",b"default_test","desc_test",b"desc_test","enable_test",b"enable_test","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","not_in_test",b"not_in_test","required_test",b"required_test","title_test",b"title_test"]) -> None: ...
global___EnumTest = EnumTest

class MapTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class PairTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class KeysTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class ValuesTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class KeysValuesTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class EnableTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class DefaultFactoryTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MissDefaultTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class RequiredTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class AliasTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class DescTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class ExampleFactoryTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class FieldTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class TitleTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class TypeTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class ExtraTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PAIR_TEST_FIELD_NUMBER: builtins.int
    KEYS_TEST_FIELD_NUMBER: builtins.int
    VALUES_TEST_FIELD_NUMBER: builtins.int
    KEYS_VALUES_TEST_FIELD_NUMBER: builtins.int
    ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_TEST_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    @property
    def pair_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def keys_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def values_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def keys_values_test(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.protobuf.timestamp_pb2.Timestamp]: ...
    @property
    def enable_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def default_factory_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def miss_default_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def required_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def alias_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def desc_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def example_factory_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def field_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def title_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def type_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    @property
    def extra_test(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    def __init__(self,
        *,
        pair_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        keys_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        values_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        keys_values_test: typing.Optional[typing.Mapping[typing.Text, google.protobuf.timestamp_pb2.Timestamp]] = ...,
        enable_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        default_factory_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        miss_default_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        required_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        alias_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        desc_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        example_factory_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        field_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        title_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        type_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        extra_test: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","default_factory_test",b"default_factory_test","desc_test",b"desc_test","enable_test",b"enable_test","example_factory_test",b"example_factory_test","extra_test",b"extra_test","field_test",b"field_test","keys_test",b"keys_test","keys_values_test",b"keys_values_test","miss_default_test",b"miss_default_test","pair_test",b"pair_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test","values_test",b"values_test"]) -> None: ...
global___MapTest = MapTest

class MessageTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SKIP_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    skip_test: typing.Text
    required_test: typing.Text
    extra_test: typing.Text
    def __init__(self,
        *,
        skip_test: typing.Text = ...,
        required_test: typing.Text = ...,
        extra_test: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["extra_test",b"extra_test","required_test",b"required_test","skip_test",b"skip_test"]) -> None: ...
global___MessageTest = MessageTest

class RepeatedTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RANGE_TEST_FIELD_NUMBER: builtins.int
    UNIQUE_TEST_FIELD_NUMBER: builtins.int
    ITEMS_STRING_TEST_FIELD_NUMBER: builtins.int
    ITEMS_DOUBLE_TEST_FIELD_NUMBER: builtins.int
    ITEMS_INT32_TEST_FIELD_NUMBER: builtins.int
    ITEMS_TIMESTAMP_TEST_FIELD_NUMBER: builtins.int
    ITEMS_DURATION_TEST_FIELD_NUMBER: builtins.int
    ITEMS_BYTES_TEST_FIELD_NUMBER: builtins.int
    ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_TEST_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    @property
    def range_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def unique_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def items_string_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def items_double_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def items_int32_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def items_timestamp_test(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.timestamp_pb2.Timestamp]: ...
    @property
    def items_duration_test(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.duration_pb2.Duration]: ...
    @property
    def items_bytes_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    @property
    def enable_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def default_factory_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def miss_default_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def required_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def alias_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def desc_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def example_factory_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def field_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def title_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def type_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def extra_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        range_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        unique_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        items_string_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        items_double_test: typing.Optional[typing.Iterable[builtins.float]] = ...,
        items_int32_test: typing.Optional[typing.Iterable[builtins.int]] = ...,
        items_timestamp_test: typing.Optional[typing.Iterable[google.protobuf.timestamp_pb2.Timestamp]] = ...,
        items_duration_test: typing.Optional[typing.Iterable[google.protobuf.duration_pb2.Duration]] = ...,
        items_bytes_test: typing.Optional[typing.Iterable[builtins.bytes]] = ...,
        enable_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        default_factory_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        miss_default_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        required_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        alias_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        desc_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        example_factory_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        field_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        title_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        type_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        extra_test: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","default_factory_test",b"default_factory_test","desc_test",b"desc_test","enable_test",b"enable_test","example_factory_test",b"example_factory_test","extra_test",b"extra_test","field_test",b"field_test","items_bytes_test",b"items_bytes_test","items_double_test",b"items_double_test","items_duration_test",b"items_duration_test","items_int32_test",b"items_int32_test","items_string_test",b"items_string_test","items_timestamp_test",b"items_timestamp_test","miss_default_test",b"miss_default_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test","unique_test",b"unique_test"]) -> None: ...
global___RepeatedTest = RepeatedTest

class AnyTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_TEST_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    @property
    def required_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def not_in_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def in_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def enable_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def default_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def default_factory_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def miss_default_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def alias_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def desc_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def example_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def example_factory_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def field_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def title_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def extra_test(self) -> google.protobuf.any_pb2.Any: ...
    def __init__(self,
        *,
        required_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        not_in_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        in_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        enable_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        default_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        default_factory_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        miss_default_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        alias_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        desc_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        example_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        example_factory_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        field_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        title_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        extra_test: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","enable_test",b"enable_test","example_factory_test",b"example_factory_test","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","not_in_test",b"not_in_test","required_test",b"required_test","title_test",b"title_test"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","enable_test",b"enable_test","example_factory_test",b"example_factory_test","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","not_in_test",b"not_in_test","required_test",b"required_test","title_test",b"title_test"]) -> None: ...
global___AnyTest = AnyTest

class DurationTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_TEST_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    @property
    def const_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def range_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def range_e_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def in_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def not_in_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def enable_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def default_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def default_factory_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def miss_default_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def required_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def alias_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def desc_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def example_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def example_factory_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def field_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def title_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def type_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def extra_test(self) -> google.protobuf.duration_pb2.Duration: ...
    def __init__(self,
        *,
        const_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        range_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        range_e_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        in_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        not_in_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        enable_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        default_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        default_factory_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        miss_default_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        required_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        alias_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        desc_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        example_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        example_factory_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        field_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        title_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        type_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        extra_test: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","enable_test",b"enable_test","example_factory_test",b"example_factory_test","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","enable_test",b"enable_test","example_factory_test",b"example_factory_test","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test"]) -> None: ...
global___DurationTest = DurationTest

class TimestampTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    LT_NOW_TEST_FIELD_NUMBER: builtins.int
    GT_NOW_TEST_FIELD_NUMBER: builtins.int
    WITHIN_TEST_FIELD_NUMBER: builtins.int
    WITHIN_AND_GT_NOW_TEST_FIELD_NUMBER: builtins.int
    ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_TEST_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TITLE_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    EXTRA_TEST_FIELD_NUMBER: builtins.int
    @property
    def const_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def range_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def range_e_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def lt_now_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def gt_now_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def within_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def within_and_gt_now_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def enable_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def default_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def default_factory_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def miss_default_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def required_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def alias_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def desc_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def example_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def example_factory_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def field_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def title_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def type_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def extra_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        const_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        range_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        range_e_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        lt_now_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        gt_now_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        within_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        within_and_gt_now_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        enable_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        default_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        default_factory_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        miss_default_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        required_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        alias_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        desc_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        example_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        example_factory_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        field_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        title_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        extra_test: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","enable_test",b"enable_test","example_factory_test",b"example_factory_test","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","gt_now_test",b"gt_now_test","lt_now_test",b"lt_now_test","miss_default_test",b"miss_default_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test","within_and_gt_now_test",b"within_and_gt_now_test","within_test",b"within_test"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","enable_test",b"enable_test","example_factory_test",b"example_factory_test","example_test",b"example_test","extra_test",b"extra_test","field_test",b"field_test","gt_now_test",b"gt_now_test","lt_now_test",b"lt_now_test","miss_default_test",b"miss_default_test","range_e_test",b"range_e_test","range_test",b"range_test","required_test",b"required_test","title_test",b"title_test","type_test",b"type_test","within_and_gt_now_test",b"within_and_gt_now_test","within_test",b"within_test"]) -> None: ...
global___TimestampTest = TimestampTest

class MessageIgnoredTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["const_test",b"const_test","range_e_test",b"range_e_test","range_test",b"range_test"]) -> None: ...
global___MessageIgnoredTest = MessageIgnoredTest

class OneOfTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    header: typing.Text
    x: typing.Text
    y: builtins.int
    def __init__(self,
        *,
        header: typing.Text = ...,
        x: typing.Text = ...,
        y: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id",b"id","x",b"x","y",b"y"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","id",b"id","x",b"x","y",b"y"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["id",b"id"]) -> typing.Optional[typing_extensions.Literal["x","y"]]: ...
global___OneOfTest = OneOfTest

class OneOfNotTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    header: typing.Text
    x: typing.Text
    y: builtins.int
    def __init__(self,
        *,
        header: typing.Text = ...,
        x: typing.Text = ...,
        y: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id",b"id","x",b"x","y",b"y"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","id",b"id","x",b"x","y",b"y"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["id",b"id"]) -> typing.Optional[typing_extensions.Literal["x","y"]]: ...
global___OneOfNotTest = OneOfNotTest

class OneOfOptionalTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class IntMapEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    HEADER_FIELD_NUMBER: builtins.int
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    AGE_FIELD_NUMBER: builtins.int
    STR_LIST_FIELD_NUMBER: builtins.int
    INT_MAP_FIELD_NUMBER: builtins.int
    header: typing.Text
    x: typing.Text
    y: builtins.int
    z: builtins.bool
    name: typing.Text
    age: builtins.int
    @property
    def str_list(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def int_map(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    def __init__(self,
        *,
        header: typing.Text = ...,
        x: typing.Text = ...,
        y: builtins.int = ...,
        z: builtins.bool = ...,
        name: typing.Optional[typing.Text] = ...,
        age: typing.Optional[builtins.int] = ...,
        str_list: typing.Optional[typing.Iterable[typing.Text]] = ...,
        int_map: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_age",b"_age","_name",b"_name","age",b"age","id",b"id","name",b"name","x",b"x","y",b"y","z",b"z"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_age",b"_age","_name",b"_name","age",b"age","header",b"header","id",b"id","int_map",b"int_map","name",b"name","str_list",b"str_list","x",b"x","y",b"y","z",b"z"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_age",b"_age"]) -> typing.Optional[typing_extensions.Literal["age"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["id",b"id"]) -> typing.Optional[typing_extensions.Literal["x","y","z"]]: ...
global___OneOfOptionalTest = OneOfOptionalTest

class NestedMessage(google.protobuf.message.Message):
    """test nested message"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class UserPayMessage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        BANK_NUMBER_FIELD_NUMBER: builtins.int
        EXP_FIELD_NUMBER: builtins.int
        UUID_FIELD_NUMBER: builtins.int
        bank_number: typing.Text
        @property
        def exp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        uuid: typing.Text
        def __init__(self,
            *,
            bank_number: typing.Text = ...,
            exp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            uuid: typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["exp",b"exp"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["bank_number",b"bank_number","exp",b"exp","uuid",b"uuid"]) -> None: ...

    class NotEnableUserPayMessage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        BANK_NUMBER_FIELD_NUMBER: builtins.int
        EXP_FIELD_NUMBER: builtins.int
        UUID_FIELD_NUMBER: builtins.int
        bank_number: typing.Text
        @property
        def exp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        uuid: typing.Text
        def __init__(self,
            *,
            bank_number: typing.Text = ...,
            exp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            uuid: typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["exp",b"exp"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["bank_number",b"bank_number","exp",b"exp","uuid",b"uuid"]) -> None: ...

    class StringInMapTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___StringTest: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___StringTest] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MapInMapTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___MapTest: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___MapTest] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    STRING_IN_MAP_TEST_FIELD_NUMBER: builtins.int
    MAP_IN_MAP_TEST_FIELD_NUMBER: builtins.int
    USER_PAY_FIELD_NUMBER: builtins.int
    NOT_ENABLE_USER_PAY_FIELD_NUMBER: builtins.int
    EMPTY_FIELD_NUMBER: builtins.int
    AFTER_REFER_FIELD_NUMBER: builtins.int
    @property
    def string_in_map_test(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___StringTest]: ...
    @property
    def map_in_map_test(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___MapTest]: ...
    @property
    def user_pay(self) -> global___NestedMessage.UserPayMessage: ...
    @property
    def not_enable_user_pay(self) -> global___NestedMessage.NotEnableUserPayMessage: ...
    @property
    def empty(self) -> google.protobuf.empty_pb2.Empty: ...
    @property
    def after_refer(self) -> global___AfterReferMessage: ...
    def __init__(self,
        *,
        string_in_map_test: typing.Optional[typing.Mapping[typing.Text, global___StringTest]] = ...,
        map_in_map_test: typing.Optional[typing.Mapping[typing.Text, global___MapTest]] = ...,
        user_pay: typing.Optional[global___NestedMessage.UserPayMessage] = ...,
        not_enable_user_pay: typing.Optional[global___NestedMessage.NotEnableUserPayMessage] = ...,
        empty: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        after_refer: typing.Optional[global___AfterReferMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["after_refer",b"after_refer","empty",b"empty","not_enable_user_pay",b"not_enable_user_pay","user_pay",b"user_pay"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["after_refer",b"after_refer","empty",b"empty","map_in_map_test",b"map_in_map_test","not_enable_user_pay",b"not_enable_user_pay","string_in_map_test",b"string_in_map_test","user_pay",b"user_pay"]) -> None: ...
global___NestedMessage = NestedMessage

class AfterReferMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UID_FIELD_NUMBER: builtins.int
    AGE_FIELD_NUMBER: builtins.int
    uid: typing.Text
    age: builtins.int
    def __init__(self,
        *,
        uid: typing.Text = ...,
        age: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["age",b"age","uid",b"uid"]) -> None: ...
global___AfterReferMessage = AfterReferMessage

class OptionalMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MY_MESSAGE1_FIELD_NUMBER: builtins.int
    MY_MESSAGE2_FIELD_NUMBER: builtins.int
    MY_MESSAGE3_FIELD_NUMBER: builtins.int
    MY_MESSAGE4_FIELD_NUMBER: builtins.int
    @property
    def my_message1(self) -> global___MessageIgnoredTest:
        """fix https://github.com/so1n/protobuf_to_pydantic/issues/82"""
        pass
    @property
    def my_message2(self) -> global___MessageIgnoredTest:
        """fix https://github.com/so1n/protobuf_to_pydantic/issues/85"""
        pass
    @property
    def my_message3(self) -> global___MessageIgnoredTest: ...
    @property
    def my_message4(self) -> global___MessageIgnoredTest: ...
    def __init__(self,
        *,
        my_message1: typing.Optional[global___MessageIgnoredTest] = ...,
        my_message2: typing.Optional[global___MessageIgnoredTest] = ...,
        my_message3: typing.Optional[global___MessageIgnoredTest] = ...,
        my_message4: typing.Optional[global___MessageIgnoredTest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_my_message1",b"_my_message1","_my_message2",b"_my_message2","my_message1",b"my_message1","my_message2",b"my_message2","my_message3",b"my_message3","my_message4",b"my_message4"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_my_message1",b"_my_message1","_my_message2",b"_my_message2","my_message1",b"my_message1","my_message2",b"my_message2","my_message3",b"my_message3","my_message4",b"my_message4"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_my_message1",b"_my_message1"]) -> typing.Optional[typing_extensions.Literal["my_message1"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_my_message2",b"_my_message2"]) -> typing.Optional[typing_extensions.Literal["my_message2"]]: ...
global___OptionalMessage = OptionalMessage
